{"title":"beginner to Django 6","slug":"beginner-to-Django-6","date":"2018-11-22T14:55:46.000Z","updated":"2018-11-23T17:55:25.110Z","comments":true,"path":"api/articles/beginner-to-Django-6.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<p>接下来要讲的是定制Django自动生成的管理端页面。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Question, Choice</span><br><span class=\"line\"><span class=\"comment\"># Register your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuestionAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    fields = [<span class=\"string\">'pub_date'</span>, <span class=\"string\">'question_text'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure>\n<p>继承ModelAdmin得到的类作为第二个位置参数传入register函数，可以对Question在管理端的表征做出改变。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Question, Choice</span><br><span class=\"line\"><span class=\"comment\"># Register your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuestionAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    fieldsets = [</span><br><span class=\"line\">        (<span class=\"keyword\">None</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'question_text'</span>, ]&#125;),</span><br><span class=\"line\">        (<span class=\"string\">'Date information'</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'pub_date'</span>, ]&#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure>\n<p>通过定义fieldsets, 可以将字段进行分块呈现，对于字段非常多的model尤其有用。</p>\n<p>似乎忘了什么？我们还需要能够编辑Choice啊！</p>\n<p>简单的做法是参照Question进行注册：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Question, Choice</span><br><span class=\"line\"><span class=\"comment\"># Register your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuestionAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    fieldsets = [</span><br><span class=\"line\">        (<span class=\"keyword\">None</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'question_text'</span>, ]&#125;),</span><br><span class=\"line\">        (<span class=\"string\">'Date information'</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'pub_date'</span>, ]&#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">admin.site.register(Question, QuestionAdmin)</span><br><span class=\"line\">admin.site.register(Choice)</span><br></pre></td></tr></table></figure>\n<p>这样做固然可以，但是用起来就会发现很不方便，最好是能够在新建question的时候能够一并创建一批choices。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Question, Choice</span><br><span class=\"line\"><span class=\"comment\"># Register your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChoiceInline</span><span class=\"params\">(admin.StackedInline)</span>:</span></span><br><span class=\"line\">    model = Choice</span><br><span class=\"line\">    extra = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuestionAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    fieldsets = [</span><br><span class=\"line\">        (<span class=\"keyword\">None</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'question_text'</span>, ]&#125;),</span><br><span class=\"line\">        (<span class=\"string\">'Date information'</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'pub_date'</span>, ]&#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    inlines = [ChoiceInline]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">admin.site.register(Question, QuestionAdmin)</span><br></pre></td></tr></table></figure>\n<p>这样的话，Django就知道Choice model 是在 Question model页面一并编辑的，并且总会提供3个空值供填写。</p>\n<p>由于StackedInline过长，将其更改为TabularInline以更好地展示：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChoiceInline</span><span class=\"params\">(admin.TabularInline)</span>:</span></span><br><span class=\"line\">    model = Choice</span><br><span class=\"line\">    extra = <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p>OK, Choice的编辑定制到此为止，让我们去修改默认的Question展示页：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QuestionAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></span><br><span class=\"line\">    fieldsets = [</span><br><span class=\"line\">        (<span class=\"keyword\">None</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'question_text'</span>, ]&#125;),</span><br><span class=\"line\">        (<span class=\"string\">'Date information'</span>, &#123;<span class=\"string\">'fields'</span>:[<span class=\"string\">'pub_date'</span>, ]&#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    list_display = (<span class=\"string\">'question_text'</span>, <span class=\"string\">'pub_date'</span>, <span class=\"string\">'was_published_recently'</span>)</span><br></pre></td></tr></table></figure>\n<p>通过定义list_display变量，指定页面需要展示的内容。而且，还可以通过点击头部进行排序。</p>\n<p>不过有个小问题，was_published_recently 展示的是函数名， 而且还不能排序。通过在Question model中增加几个属性来解决该问题：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/models.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.utils <span class=\"keyword\">import</span> timezone</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> timedelta</span><br><span class=\"line\"><span class=\"comment\"># Create your models here.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Question</span><span class=\"params\">(models.Model)</span>:</span></span><br><span class=\"line\">    question_text = models.CharField(max_length=<span class=\"number\">200</span>)</span><br><span class=\"line\">    pub_date = models.DateTimeField(<span class=\"string\">'date published'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__str__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.question_text</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">was_published_recently</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.pub_date &gt; timezone.now() - timedelta(days=<span class=\"number\">1</span>)</span><br><span class=\"line\">    was_published_recently.admin_order_field = <span class=\"string\">'pub_date'</span></span><br><span class=\"line\">    was_published_recently.boolean = <span class=\"keyword\">True</span></span><br><span class=\"line\">    was_published_recently.short_description = <span class=\"string\">'Published recently?'</span></span><br></pre></td></tr></table></figure>\n<p>在QuestionAdmin中增加list_filter变量，就可以通过pub_date来筛选了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\">list_filter = [<span class=\"string\">'pub_date'</span>]</span><br></pre></td></tr></table></figure>\n<p>而search_fields变量则可以指定能用来进行搜索的字段：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\">search_fields = [<span class=\"string\">'question_text'</span>]</span><br></pre></td></tr></table></figure>\n<p>页面左上角的标题是”Django administration”, 如何改为自己想要的东西呢？很简单，一个变量搞掂：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># polls/admin.py</span></span><br><span class=\"line\"></span><br><span class=\"line\">admin.AdminSite.site_header = <span class=\"string\">'Polls Administration'</span></span><br></pre></td></tr></table></figure>\n<p>当然，这样只是改了polls这一个app的标题，其他app还是”Django administration”，如果想要整个项目都一起更改，就要多做几步了：</p>\n<ol>\n<li><p>在manage.py所处目录下创建目录templates, 在templates中再创建目录admin;</p>\n</li>\n<li><p>修改settings.py的TEMPLATES变量，增加DIRS：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TEMPLATES = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class=\"line\">        <span class=\"string\">'DIRS'</span>: [os.path.join(BASE_DIR, <span class=\"string\">'templates'</span>)],</span><br><span class=\"line\">        <span class=\"string\">'APP_DIRS'</span>: <span class=\"keyword\">True</span>,</span><br><span class=\"line\">        <span class=\"string\">'OPTIONS'</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">'context_processors'</span>: [</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.debug'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.template.context_processors.request'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.auth.context_processors.auth'</span>,</span><br><span class=\"line\">                <span class=\"string\">'django.contrib.messages.context_processors.messages'</span>,</span><br><span class=\"line\">            ],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将django/contrib/admin/templates/admin/base_site.html复制到第一步创建的admin目录中；</p>\n</li>\n<li><p>修改base_site.html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block branding %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">id</span>=<span class=\"string\">\"site-name\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;% url 'admin:index' %&#125;\"</span>&gt;</span>Polls administration<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","categories":[],"tags":[{"name":"Python","slug":"Python","count":8,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":6,"path":"api/tags/Django.json"}]}
{"name":"编程","slug":"编程","count":1,"postlist":[{"title":"Introduction to tcpdump","slug":"Introduction-to-tcpdump","date":"2018-04-29T09:08:22.000Z","updated":"2018-04-29T10:10:58.791Z","comments":true,"path":"api/articles/Introduction-to-tcpdump.json","excerpt":"","keywords":null,"cover":null,"content":"<p>网络编程出异常的时候，常用的调试办法一定包含抓包。抓取请求和响应的内容，才能定位问题出在哪里。<br>这几天学习了一下tcpdump命令，不得不说，简直是抓包神器啊。下面开始正文。</p>\n<p>man手册中介绍tcpdump：dump traffic on a network.顾名思义，就是抓取网络中信息流。</p>\n<p>我经常用的选项：<br>-A: 以ASCII形式打印抓到的每一个包，但是如果加密了就没办法<br>-c: 后面接数字，抓到指定数量包后就退出<br>-i: 指定监听的网络接口。一般用”-i any”表示监听所有网络接口的数据<br>-nn: 不要把主机地址和端口转换成名字，即保留数字形式<br>-r: 读取文件<br>-s: 限定包的长度，”-s 0”表示抓取完整长度的包<br>-tttt: 打印人类可读的时间<br>-vvv: 使包的信息尽可能详细<br>-w: 把抓到的包写入文件中<br>-X: 以16进制和ASCII的形式输出</p>\n<p>还可以指定主机，端口，网络：<br>host: 指定主机<br>port: 指定端口<br>net: 指定网络<br>src: 包来源<br>dst: 包目的地</p>\n<p>还可以用逻辑表达式组合一系列选项：<br>“and” “or” “not”</p>\n<p>tcpdump一般的输出形式：<br>  src &gt; dst: Flags [tcpflags], seq data-seqno, ack ackno, win window, urg urgent, options [opts], length len</p>\n<p>以我目前的水平只能解释到这里了，man手册后半部分比较深入，由于自己对TCP的原理还不够了解，看不太明白…<br>以上基本的用法掌握了，对于工作中遇到的大部分问题其实也够用了。后续有时间再好好研读HTTP权威指南等大部头，彻底搞懂网络请求的每一个细节！</p>\n","text":"网络编程出异常的时候，常用的调试办法一定包含抓包。抓取请求和响应的内容，才能定位问题出在哪里。<br>这几天学习了一下tcpdump命令，不得不说，简直是抓包神器啊。下面开始正文。man手册中介绍tcpdump：dump traffic on a network.顾名思义，就是抓","link":"","raw":null,"photos":[],"categories":[{"name":"编程","slug":"编程","count":1,"path":"api/categories/编程.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}]}]}